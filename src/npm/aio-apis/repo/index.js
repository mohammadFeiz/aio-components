import e from"axios";import t from"axios-mock-adapter";import{Alert as i,Loading as r}from"aio-popup";function _defineProperty(e,t,i){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"==typeof t?t:String(t)}function _toPrimitive(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var r=i.call(e,t||"default");if("object"!=typeof r)return r;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}export default class s{constructor(t){_defineProperty(this,"props",void 0),_defineProperty(this,"token",void 0),_defineProperty(this,"cache",void 0),_defineProperty(this,"getCachedValue",void 0),_defineProperty(this,"updateCache",void 0),_defineProperty(this,"setCache",void 0),_defineProperty(this,"removeCache",void 0),_defineProperty(this,"apisThatAreInLoadingTime",{}),_defineProperty(this,"setToken",t=>{let i=t||this.props.token;i&&(e.defaults.headers.common.Authorization=`Bearer ${i}`)}),_defineProperty(this,"addAlert",e=>{let{type:t,text:r,subtext:s,time:a}=e;i({type:t,text:r,subtext:s,time:a,className:"aio-apis-popup",closeText:"fa"===this.props.lang?"بستن":"Close"})}),_defineProperty(this,"responseToResult",async t=>{let{headers:i=this.props.headers,errorResult:r=this.props.errorResult}=t,{onCatch:s,getResult:a}=this.props;if(!s){let o=`
  missing onCatch in api: ${t.description},
  you should set onCatch in api or in props of AIOApis    
`;return{result:r,errorMessage:o,success:!1,response:{}}}try{let n=await e({method:t.method,url:t.url,data:t.body,headers:i}),h=a(n);return{result:h,success:!0,response:n}}catch(l){let d=s(l,t);return{result:r,errorMessage:d,success:!1,response:l}}}),_defineProperty(this,"showErrorMessage",e=>{let{description:t}=e.api;if(!e.errorMessage)return;let i="fa"===this.props.lang?`${t} با خطا روبرو شد`:`An error was occured in ${t}`;this.addAlert({type:"error",text:i,subtext:e.errorMessage})}),_defineProperty(this,"request",async(e,t)=>{if(this.apisThatAreInLoadingTime[e.name])return;let{loading:i=!1,loader:s=this.props.loader,token:a=this.props.token}=e;if(this.token!==a&&this.setToken(a),e.mock&&this[e.mock.methodName]){let o=e.mock.methodName;handleMockApi({url:e.url,delay:e.mock.delay,method:e.method,result:e=>this[o](e)})}if(!t){if(e.cache){let n=this.cache.getCachedValue(e.name,e.cache.name);if(void 0!==n)return console.log(`AIOApis => get result of api by api.name='${e.name}' and cache.name='${e.cache.name}' from cache`),n}else this.cache.removeCache(e.name)}let h="aa"+Math.round(1e5*Math.random()),l=new r(s);i&&l.show(h,e.loadingParent),this.apisThatAreInLoadingTime[e.name]=!0;let{result:d,errorMessage:p,success:c,response:u}=await this.responseToResult({...e});if(e.showMessage){let y=e.showMessage({response:u,result:d,success:c,message:p});!1!==y&&this.addAlert(y)}if(this.apisThatAreInLoadingTime[e.name]=!1,i&&l.hide(h),p&&void 0===e.showMessage)return this.showErrorMessage({errorMessage:p,api:e}),d;if(c&&e.cache){let f={api:e,value:d};this.cache.setCache(e.name,e.cache.name,f)}return d}),console.log("aio-apis constructor"),this.props=t;let s=new Storage(t.id);this.token=t.token,this.setToken(t.token),this.cache=new Cache(s,async e=>await this.request(e.api,!0)),this.getCachedValue=this.cache.getCachedValue,this.updateCache=this.cache.updateCacheValue,this.setCache=this.cache.setCache,this.removeCache=this.cache.removeCache}};function handleMockApi(i){let r=new t(e);"get"===i.method&&(r.resetHandlers(),r.onGet(i.url).replyOnce(e=>new Promise(t=>{setTimeout(()=>{let{status:s,data:a}=i.result(e);t([s,a]),r.restore()},i.delay)}))),"post"===i.method&&(r.resetHandlers(),r.onPost(i.url).replyOnce(e=>new Promise(t=>{setTimeout(()=>{let{status:s,data:a}=i.result(e);t([s,a]),r.restore()},i.delay)})))}class Cache{constructor(e,t){_defineProperty(this,"storage",void 0),_defineProperty(this,"callApi",void 0),_defineProperty(this,"intervals",{}),_defineProperty(this,"getKey",e=>`${e.api.name}-${e.api.cache.name}`),_defineProperty(this,"detectIntervalChange",e=>{var t;let i=null===(t=e.api.cache)||void 0===t?void 0:t.interval,r=this.intervals[this.getKey(e)]||{};return i!==r.repeatTime}),_defineProperty(this,"handleIntervals",()=>{console.log("handleIntervals");let e=this.storage.getKeys();for(let t of e)this.SetInterval(t)}),_defineProperty(this,"SetInterval",e=>{let t=this.getCachedApi(e);if(!t)return;let{api:i}=t,{cache:r}=i;if(!r||!this.detectIntervalChange(t))return;let{interval:s=0}=r;!(s<1e3)&&(this.ClearInterval(e),this.intervals[e]=this.intervals[e]||{repeatTime:s,value:void 0},this.intervals[e].value=setInterval(async()=>{var i;console.log(`AIOApis => call api by api.name='${t.api.name}' and cache.name='${null===(i=t.api)||void 0===i||null===(i=i.cache)||void 0===i?void 0:i.name}' by interval (${s} miliseconds)`),this.updateCacheByKey(e)},s))}),_defineProperty(this,"ClearInterval",e=>{clearInterval((this.intervals[e]||{}).value),this.intervals[e]=void 0}),_defineProperty(this,"getCachedApi",e=>{let t=this.storage.load(e);return t}),_defineProperty(this,"updateCacheByKey",async e=>{if(this.storage.isExpired(e)){this.removeByKey(e);return}let t=this.getCachedApi(e);if(!t)return;let{api:i}=t;if(!i.cache)return;let r=await this.callApi(t),s={api:t.api,value:r};this.setCache(i.name,i.cache.name,s)}),_defineProperty(this,"getCachedValue",(e,t)=>{let i=this.getCachedApi(`${e}-${t}`);if(void 0!==i)return i.value}),_defineProperty(this,"updateCacheValue",(e,t)=>this.updateCacheByKey(`${e}-${t}`)),_defineProperty(this,"setCache",(e,t,i)=>{var r,s;let a=`${e}-${t}`,o=this.getCachedApi(a),n={...o,...i},h=null===(r=n.api.cache)||void 0===r?void 0:r.expiredIn;this.storage.save(a,n,h),null!=n&&null!==(s=n.api.cache)&&void 0!==s&&s.interval?this.SetInterval(a):this.ClearInterval(a)}),_defineProperty(this,"removeByKey",e=>{clearInterval((this.intervals[e]||{}).value),this.storage.remove(e)}),_defineProperty(this,"removeCache",(e,t)=>{if(t)this.removeByKey(`${e}-${t}`);else{let i=this.storage.getKeys();for(let r of i)0===r.indexOf(`${e}-`)&&this.removeByKey(r)}}),this.storage=e,this.callApi=t,this.handleIntervals()}}export class Storage{constructor(e){_defineProperty(this,"model",void 0),_defineProperty(this,"id",void 0),_defineProperty(this,"init",()=>{let e=localStorage.getItem("storageClass"+this.id);this.setModel(null==e?{}:JSON.parse(e))}),_defineProperty(this,"copy",e=>JSON.parse(JSON.stringify(e))),_defineProperty(this,"setModel",e=>(this.model=e,localStorage.setItem("storageClass"+this.id,JSON.stringify(e)),this.copy(e))),_defineProperty(this,"getNow",()=>new Date().getTime()),_defineProperty(this,"save",(e,t,i)=>{if(void 0===t)return this.copy(this.model);let r={...this.model},s=this.getNow();return r[e]={value:t,saveTime:s,expiredIn:1/0},i&&(r[e].expiredIn=i),this.setModel(r)}),_defineProperty(this,"remove",e=>{let t={};for(let i in this.model)i!==e&&(t[i]=this.model[i]);return this.setModel(t)}),_defineProperty(this,"removeKeyFromObject",(e,t)=>{let i={};for(let r in e)r!==t&&(i[r]=e[r]);return i}),_defineProperty(this,"isExpired",e=>!this.model[e]||this.model[e].expiredIn<this.getNow()),_defineProperty(this,"load",(e,t,i)=>{let r=this.model[e];if(!r)return this.save(e,t,i),t;let s=this.isExpired(e);return s?(this.save(e,t,i),t):r.value}),_defineProperty(this,"clear",()=>this.setModel({})),_defineProperty(this,"download",(e,t)=>{if(!t||null===t)return;let i=JSON.stringify(e),r=document.createElement("a");r.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(i)),r.setAttribute("download",t),r.style.display="none",document.body.appendChild(r),r.click(),document.body.removeChild(r)}),_defineProperty(this,"export",()=>{let e=window.prompt("Please Inter File Name");null!==e&&e&&this.download({model:this.model},e)}),_defineProperty(this,"read",async e=>new Promise((t,i)=>{let r=new FileReader;r.onload=()=>{try{let e=JSON.parse(r.result);t(e)}catch(s){i(Error("Error parsing JSON: "+s.message))}},r.onerror=()=>i(Error("Error reading file.")),r.readAsText(e)})),_defineProperty(this,"import",async e=>{let t=await this.read(e);return void 0===t?this.model:this.setModel(t)}),_defineProperty(this,"getKeys",()=>Object.keys(this.model)),this.model={},this.id=e,this.init()}}