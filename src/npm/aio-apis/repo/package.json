{
  "name": "aio-apis",
  "version": "5.0.0",
  "description": "``` javascript\r npm i aio-apis\r ```\r ### create apis class instance\r ``` javascript\r const MyLoader = () => {\r     return '<div class=\"my-loading\"></div>'\r }\r class Mock {\r     Users_Get = (type) => {\r         return [\r             {name:'name1',id:0},\r             {name:'name2',id:1},\r             {name:'name3',id:2}\r         ]\r     }\r }\r let props:I_apis_props = {\r     id:'my app',\r     baseUrl:'https://my-dev.com/ap/v1',\r     //this is optional(default loader will work)\r     //you can returns any jsx/html as loader \r     loader:()=><MyLoader/>,\r     //this function will call after request went to catch\r     //in this case you should return an string error message to user\r     onCatch:(err,apiConfig)=>{\r         if(err.response){\r             return err.response.message\r         }\r         else if(err.message){\r             return err.message\r         }\r         else {\r             return 'unknown error'\r         }\r     },\r     //check all apis and if is error conditions return error message else return undefined\r     //you can check is token valid or not in this function . if not valid you can call logout\r     getError:(response,apiConfig)=>{\r         if(response.data.isSuccess === false){\r             return response.data.message\r         }\r         else if(response.status === 401){\r             logout()\r         }\r     },\r     //define apis in dictionary\r     apis:{\r         Users_Get:{\r             //read User_Get from Mock class instance\r             mockResult:true\r         },\r         Users_Add:{\r             //optional\r             //error messages of popups will create from this description\r             //for example \r             description:'adding user',\r             //set api method\r             method:'post',\r             //set api url by baseUrl\r             getUrl:(baseUrl)=>`${baseUrl}/Users/Add`,",
  "main": "index.js",
  "dependencies": {
    "aio-popup": "latest",
    "aio-loading":"latest",
    "axios": "^1.7.7"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "mohammad sharif feiz feiz.ms@gmail.com",
  "license": "ISC",
  "types": "./index.d.ts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mohammadFeiz/aio-apis.git"
  },
  "bugs": {
    "url": "https://github.com/mohammadFeiz/aio-apis/issues"
  },
  "homepage": "https://github.com/mohammadFeiz/aio-apis#readme"
}
